#pragma once
#define ID_MAXSIZE		11			//максимальное кол-во символов в идентификаторе
#define TI_MAXSIZE		4096		//максимальное кол-во строк в идентификаторе
#define TI_INT_DEFAULT	0x00000000	//значение по умолчанию для типа integer
#define TI_STRDEFAULT	0x00		//значение по умолчанию для типа string
#define TI_NULLIDX		0xffffffff	//нет элемента таблицы идентификаторов
#define TI_STR_MAXSIZE	225	

namespace IT
{
	enum IDDATATYPE { NUM = 1, STR = 2, OPR = 3 };
	enum IDTYPE { V = 1, F = 2, P = 3, L = 4, O = 5 };   //переменная, функция, параметр функции, литерал, оператор

	struct Entry						// строка таблицы идентификаторов
	{
		int			idxfirstLE;			//индекс первой строки в таблице лексем
		char		id[ID_MAXSIZE];		//идентификатор	(автоматические усекается до ID_MAXSIZE)
		IDDATATYPE	iddatatype;			//тип данных
		IDTYPE		idtype;				//тип идентификатора
		union
		{
			int vint;					//значение integer
			struct {
				int len;						//длина string
				char str[TI_STR_MAXSIZE];		//символы string
			} vstr;								//значение string
		} value;				//значение идентификатора
	};

	struct IdTable				//экземпляр таблицы идентификаторов
	{
		int maxsize;			//емкость таблицы идентификаторов < TI_MAXSIZE
		int size;				//текущий размер таблицы идентификаторов < maxsize
		Entry* table;			//массив строк таблицы идентификаторов
	};
	IdTable Create(				//создать таблицу идентификаторов
		int size				//емкость таблицы идентификаторов
	);
	void Add(					//добавить строку в таблицу идентификаторов
		IdTable& idtable,		//экземпляр таблицы идентификаторов
		Entry entry				//строка таблицы идентификаторов
	);
	Entry GetEntry(				//получить строку таблицы идентификаторов
		IdTable& idtable,		//экземпляр таблицы идентификаторов
		int n					//номер получаемой строки
	);
	int IsId(					//возврат: номер строки(если есть), TI_NULLIDX(если нет)
		IdTable& idtable,		//экземпляр таблицы идентификаторов
		char id[ID_MAXSIZE]		//идентафикатор
	);
	void Delete(IdTable& idtable);
	int checkId(IdTable& idtable, char value[ID_MAXSIZE]);
	int IsDublId(IdTable& idtable, char id[ID_MAXSIZE]); //проверка на дублирвание ид

	int checkId(IdTable& idtable, int value);
};